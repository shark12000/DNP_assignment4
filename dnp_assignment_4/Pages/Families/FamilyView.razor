@page "/FamilyView"
@using dnp_assignment_4.Data
@using dnp_assignment_4.Models

@inject IJSRuntime jsRuntime
@inject IFamilyService FamilyServiceImpl
@inject NavigationManager NavigationManager
@inject IUserService UserService
@inject IAdultService AdultService;
@inject AuthenticationStateProvider AuthenticationStateProvider

<AuthorizeView>
<h3>FamilyView</h3>
<button @onclick='AddFamily'>Add</button>
@foreach (Family family in families)
{
    if (!family.Equals(null))
    {
        <div style="border:1px solid gainsboro">
            @family.StreetName + @family.HouseNumber
            <a href="/family/@family.Id/edit">Edit</a>
            <a href="/family/@family.Id/delete">Delete</a>
        </div>
    }
}

<div></div>
</AuthorizeView>


@code {
    private IList<Family> families = new List<Family>();
    
    
    [Parameter]
    public string userId { get; set; }

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;
        userId = user.FindFirst(claim => claim.Type.Equals("Id")).Value;
        int id = Int32.Parse(userId);
        families = await FamilyServiceImpl.GetCurrentUserFamilies(id);
    }
    
    
    private void AddFamily()
    {
        NavigationManager.NavigateTo("/{userId}/FamilyView/add");
    }

}